---
swagger: "2.0"
info:
  description: "Backend API documentation for novels scrapped. Hosted on AWS using API Gateway REST API with lambda integration, retreiving data from Firebase Realtime Database."
  version: "1.0.0"
  title: "Novels API"
  contact:
    email: "wmsam91@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "api.wmsam.dev"
tags:
  - name: "novels"
    description: "Everything about novels"
  - name: "chapters"
    description: "Access to chapters"
  - name: "chapter"
    description: "Access to chapter"
schemes:
  - "https"
  - "http"
paths:
  /novels:
    get:
      tags:
        - "novels"
      summary: "Returns list of novels"
      description: "return List of novels"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/NovelsResponse"
  /{novel}/chapters:
    get:
      tags:
        - "chapters"
      summary: "Returns list of chapters for that specific novel"
      description: ""
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - name: "novel"
          in: "path"
          description: "ID of novel to return"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ChaptersResponse"

  /{novel}/{chapter}:
    get:
      tags:
        - "chapter"
      summary: "Return a single chapter"
      description: ""
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - in: "path"
          name: "novel"
          description: "ID of novel"
          type: "string"
          required: true
        - in: "path"
          name: "chapter"
          description: "ID of novel"
          type: "integer"
          format: "int64"
          required: true

      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ChapterResponse"
definitions:
  NovelsResponse:
    type: "array"
    items:
      type: "object"
      properties:
        Name:
          type: "string"

  ChaptersResponse:
    type: "array"
    items:
      type: "object"
      properties:
        title:
          type: "string"
        text:
          type: "string"
        link:
          type: "string"
        chapter:
          type: "integer"
          format: int64

  ChapterResponse:
    type: "object"
    properties:
      title:
        type: "string"
      text:
        type: "string"
      link:
        type: "string"
      chapter:
        type: "integer"
        format: int64

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
